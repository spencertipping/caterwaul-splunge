caterwaul.module( 'splunge' , (function(e1) {var result= (function($) {$.splunge= (function() {var(function() {var vplus=e1.vplus,vtimes=e1.vtimes,vminus=e1.vminus,vscale=e1.vscale,vdot=e1.vdot,vnorm=e1.vnorm,vmin=e1.vmin,vmax=e1.vmax,vmacv=e1.vmacv,vmacs=e1.vmacs,vunit=e1.vunit,vproj=e1.vproj,vorth=e1.vorth;
return atan_scale=2/Math.PI,scaled_atan=function(x) {;
return Math.atan(x) *atan_scale} ,scaled_tan=function(x) {;
return Math.tan(clip(x/atan_scale) ) } ,clip=function(x) {;
return Math.min(Math.max(x, -1) ,1) } ,identity=function(x) {;
return x} ,componentwise=function(f1,f2) {;
return function(v) {;
return[f1(v[0] ) ,f2(v[1] ) ] } } ,x_tangent= {transform:componentwise(scaled_tan,identity) ,inverse:function() {;
return x_arctangent} } ,x_arctangent= {transform:componentwise(scaled_atan,identity) ,inverse:function() {;
return x_tangent} } ,y_tangent= {transform:componentwise(identity,scaled_tan) ,inverse:function() {;
return y_arctangent} } ,y_arctangent= {transform:componentwise(identity,scaled_atan) ,inverse:function() {;
return y_tangent} } ,inverse_polar= {transform:function(v) {var d=vnorm(v) ;
var t=Math.atan2(v[0] ,v[1] ) ;
return[d,t] } ,inverse:function() {;
return polar} } ,polar= {transform:function(v) {var d=v[0] ;
var t=v[1] ;
return[d*Math.cos(t) ,d*Math.sin(t) ] } ,inverse:function() {;
return inverse_polar} } ,rectangle=function(data,v,dv) {;
return(function(it) {return it.data=data,it} ) .call(this, (box(v,dv) ) ) } ,box=function(v,dv) {;
return new box_ctor(v,dv) } ,translate=function(v) {;
return new box_ctor(v, [1,1] ) } ,box_ctor= (function(it) {return $.merge(it.prototype, {area:function() {;
return this.dv[0] *this.dv[1] } ,plus:function(b) {;
return box(vplus(this.v,b.v) ,vplus(this.dv,b.dv) ) } ,interpolate:function(b,x) {;
return(this.scale(1-x) ) .plus(b.scale(x) ) } ,scale:function(x) {;
return box(vscale(this.v,x) ,vscale(this.dv,x) ) } ,transform:function(v) {;
return vplus(this.v,vtimes(v,this.dv) ) } ,inverse:function() {;
return box(vscale(this.v, -1) , [1/this.dv[0] ,1/this.dv[1] ] ) } ,bound:function() {;
return this} ,union:function(b) {;
return(function() {var c1=vmin(this.v,b.v) ,c2=vmax(vplus(this.v,this.dv) ,vplus(b.v,b.dv) ) ;
return box(c1,vminus(c2,c1) ) } ) .call(this) } ,transform_with:function(t) {;
return(this) .map_corners(function(_) {return t.transform(_) } ) } ,contains:function(v) {;
return v[0] >=this.v[0] &&v[1] >=this.v[1] &&v[0] <=this.v[0] +this.dv[0] &&v[1] <=this.v[1] +this.dv[1] } ,map_corners:function(f) {;
return(function() {var c1=f(this.v) ,c2=f(vplus(this.v,this.dv) ) ;
return box(c1,vminus(c2,c1) ) } ) .call(this) } } ) ,it} ) .call(this, ( (function(v,dv) {return this.v=v,this.dv=dv} ) ) ) ,stack=function(xs,v) {;
return array_stack(xs,0,v) } ,stack_object=function(o) {;
return $.merge(o, {transform_with:function(t) {;
return transformed_stack(this,t) } ,each:function(f) {var n=this.next() ;
return f(this.first() ) && (n&& (n) .each(f) ) } } ) } ,lazy_stack_object=function(o) {;
return( (o.bound=function() {var b=this.first() .bound() ;
return box(b.v, [b.dv[0] /0||0,b.dv[1] /0||0] ) } ) ,stack_object(o) ) } ,array_stack=function(xs,i,v) {;
return stack_object( {first:function() {;
return xs[i] } ,bound:function() {var b=this.first() .bound() ;
var n=this.next() ;
return n?b.union(n.bound() ) 
:b} ,next:function() {;
return i<xs.length&& (this.next_!==void 0?this.next_
:this.next_= (array_stack(xs,i+1,v) ) .transform_with(translate(vproj(this.first() .bound() .dv,v) ) ) ) } } ) } ,transformed_stack=function(s,t) {;
return stack_object( {first:function() {;
return s.first() .transform_with(t) } ,next:function() {var n=s.next() ;
return n&&transformed_stack(n,t) } ,bound:function() {;
return s.bound() .transform_with(t) } } ) } ,lazy_stack=function(x,f,v) {;
return lazy_stack_object( {first:function() {;
return x} ,next:function() {;
return f(x) } } ) } ,persistent_lazy_stack=function(x,f,v) {;
return lazy_stack_object( {first:function() {;
return x} ,next:function() {;
return this.next_!==void 0?this.next_
:this.next_=f(x) } } ) } ,rectangle_path=function(b,c) {;
return c.rect(b.v[0] ,b.v[1] ,b.v[0] +b.dv[0] ,b.v[1] +b.dv[1] ) } ,arc_path=function(b,c) {;
return( ( ( ( (c.save() ,c.rotate(b.v[1] ) ) ,c.arc(0,0,b.v[0] ,0,b.dv[1] ) ) ,c.arc(0,0,b.v[0] +b.dv[0] ,b.dv[1] ,0,true) ) ,c.lineTo(b.v[0] ,0) ) ,c.restore() ) } ,cosine=function(x) {;
return Math.cos(x*Math.PI) * -0.5+0.5} ,viewport=function(initial,f) {;
return(function() {var _transform=initial,stop=function() {;
return _interval&& (clearInterval(_interval) ,_interval=null) } ,_interval=null,animate=function(t,duration,tween) {;
return(stop() ,_interval=setInterval(interpolator(_transform,t, +new Date,duration||400,tween||cosine) ,40) ) } ,transform=function(t) {;
return t?f(_transform=t) 
:_transform} ,interpolator=function(s,t,c,d,i) {;
return function() {var now= +new Date;
return(now>c+d&& (stop() ,now=c+d) ,transform(interpolate(s,t,i( (now-c) /d) ) ) ) } } ;
return{_transform:_transform,stop:stop,_interval:_interval,animate:animate,transform:transform,interpolator:interpolator} } ) .call(this) } ,default_viewport=function(canvas,t) {;
return viewport(t|| {x0:0,dx:1,y0:0,dy:1} ,default_renderer(canvas) ) } ,drag_events=function(canvas) {;
return(function() {var last_x=0,last_y=0,dragging=false,last_selected=null,$doc=jQuery(document) ,self=jQuery(canvas) ,record=function(x,y) {;
return(last_x=x,last_y=y) } ,start_dragging=function(e) {;
return(record(e.pageX,e.pageY) , ( ($doc) .mousemove(drag) ) .mouseup(stop_dragging) ) } ,stop_dragging=function(e) {;
return $doc.unbind( 'mousemove' ,drag) .unbind( 'mouseup' ,stop_dragging) } ,drag=function(e) {;
return(self.trigger( 'drag_delta' ,$.merge( {} ,e, {dx:e.pageX-last_x,dy:e.pageY-last_y} ) ) ,record(e.pageX,e.pageY) ) } ;
return( !self.data( 'splunge_drag_delta_installed' ) &&self.mousedown(start_dragging) .data( 'splunge_drag_delta_installed' ,true) ,self) } ) .call(this) } ,default_interaction=function(canvas,v) {;
return(function() {var x_scale=function(v) {;
return v.transform() .dx} ,pan_or_scale=function(e) {;
return e.shiftKey?scale(e) 
:pan(e) } ,y_scale=function(v) {;
return v.transform() .dy} ,scale=function(e) {;
return v.transform(plus(base(v.transform() ) ,times(d(v.transform() ) , {x:e.dx,y:e.dy} ) ) ) } ;
return drag_events(canvas) .on( 'drag_delta' ,pan_or_scale) } ) .call(this) } } ) .call(this) ;
return{ (function() {var vplus=e1.vplus,vtimes=e1.vtimes,vminus=e1.vminus,vscale=e1.vscale,vdot=e1.vdot,vnorm=e1.vnorm,vmin=e1.vmin,vmax=e1.vmax,vmacv=e1.vmacv,vmacs=e1.vmacs,vunit=e1.vunit,vproj=e1.vproj,vorth=e1.vorth;
return atan_scale=2/Math.PI,scaled_atan=function(x) {;
return Math.atan(x) *atan_scale} ,scaled_tan=function(x) {;
return Math.tan(clip(x/atan_scale) ) } ,clip=function(x) {;
return Math.min(Math.max(x, -1) ,1) } ,identity=function(x) {;
return x} ,componentwise=function(f1,f2) {;
return function(v) {;
return[f1(v[0] ) ,f2(v[1] ) ] } } ,x_tangent= {transform:componentwise(scaled_tan,identity) ,inverse:function() {;
return x_arctangent} } ,x_arctangent= {transform:componentwise(scaled_atan,identity) ,inverse:function() {;
return x_tangent} } ,y_tangent= {transform:componentwise(identity,scaled_tan) ,inverse:function() {;
return y_arctangent} } ,y_arctangent= {transform:componentwise(identity,scaled_atan) ,inverse:function() {;
return y_tangent} } ,inverse_polar= {transform:function(v) {var d=vnorm(v) ;
var t=Math.atan2(v[0] ,v[1] ) ;
return[d,t] } ,inverse:function() {;
return polar} } ,polar= {transform:function(v) {var d=v[0] ;
var t=v[1] ;
return[d*Math.cos(t) ,d*Math.sin(t) ] } ,inverse:function() {;
return inverse_polar} } ,rectangle=function(data,v,dv) {;
return(function(it) {return it.data=data,it} ) .call(this, (box(v,dv) ) ) } ,box=function(v,dv) {;
return new box_ctor(v,dv) } ,translate=function(v) {;
return new box_ctor(v, [1,1] ) } ,box_ctor= (function(it) {return $.merge(it.prototype, {area:function() {;
return this.dv[0] *this.dv[1] } ,plus:function(b) {;
return box(vplus(this.v,b.v) ,vplus(this.dv,b.dv) ) } ,interpolate:function(b,x) {;
return(this.scale(1-x) ) .plus(b.scale(x) ) } ,scale:function(x) {;
return box(vscale(this.v,x) ,vscale(this.dv,x) ) } ,transform:function(v) {;
return vplus(this.v,vtimes(v,this.dv) ) } ,inverse:function() {;
return box(vscale(this.v, -1) , [1/this.dv[0] ,1/this.dv[1] ] ) } ,bound:function() {;
return this} ,union:function(b) {;
return(function() {var c1=vmin(this.v,b.v) ,c2=vmax(vplus(this.v,this.dv) ,vplus(b.v,b.dv) ) ;
return box(c1,vminus(c2,c1) ) } ) .call(this) } ,transform_with:function(t) {;
return(this) .map_corners(function(_) {return t.transform(_) } ) } ,contains:function(v) {;
return v[0] >=this.v[0] &&v[1] >=this.v[1] &&v[0] <=this.v[0] +this.dv[0] &&v[1] <=this.v[1] +this.dv[1] } ,map_corners:function(f) {;
return(function() {var c1=f(this.v) ,c2=f(vplus(this.v,this.dv) ) ;
return box(c1,vminus(c2,c1) ) } ) .call(this) } } ) ,it} ) .call(this, ( (function(v,dv) {return this.v=v,this.dv=dv} ) ) ) ,stack=function(xs,v) {;
return array_stack(xs,0,v) } ,stack_object=function(o) {;
return $.merge(o, {transform_with:function(t) {;
return transformed_stack(this,t) } ,each:function(f) {var n=this.next() ;
return f(this.first() ) && (n&& (n) .each(f) ) } } ) } ,lazy_stack_object=function(o) {;
return( (o.bound=function() {var b=this.first() .bound() ;
return box(b.v, [b.dv[0] /0||0,b.dv[1] /0||0] ) } ) ,stack_object(o) ) } ,array_stack=function(xs,i,v) {;
return stack_object( {first:function() {;
return xs[i] } ,bound:function() {var b=this.first() .bound() ;
var n=this.next() ;
return n?b.union(n.bound() ) 
:b} ,next:function() {;
return i<xs.length&& (this.next_!==void 0?this.next_
:this.next_= (array_stack(xs,i+1,v) ) .transform_with(translate(vproj(this.first() .bound() .dv,v) ) ) ) } } ) } ,transformed_stack=function(s,t) {;
return stack_object( {first:function() {;
return s.first() .transform_with(t) } ,next:function() {var n=s.next() ;
return n&&transformed_stack(n,t) } ,bound:function() {;
return s.bound() .transform_with(t) } } ) } ,lazy_stack=function(x,f,v) {;
return lazy_stack_object( {first:function() {;
return x} ,next:function() {;
return f(x) } } ) } ,persistent_lazy_stack=function(x,f,v) {;
return lazy_stack_object( {first:function() {;
return x} ,next:function() {;
return this.next_!==void 0?this.next_
:this.next_=f(x) } } ) } ,rectangle_path=function(b,c) {;
return c.rect(b.v[0] ,b.v[1] ,b.v[0] +b.dv[0] ,b.v[1] +b.dv[1] ) } ,arc_path=function(b,c) {;
return( ( ( ( (c.save() ,c.rotate(b.v[1] ) ) ,c.arc(0,0,b.v[0] ,0,b.dv[1] ) ) ,c.arc(0,0,b.v[0] +b.dv[0] ,b.dv[1] ,0,true) ) ,c.lineTo(b.v[0] ,0) ) ,c.restore() ) } ,cosine=function(x) {;
return Math.cos(x*Math.PI) * -0.5+0.5} ,viewport=function(initial,f) {;
return(function() {var _transform=initial,stop=function() {;
return _interval&& (clearInterval(_interval) ,_interval=null) } ,_interval=null,animate=function(t,duration,tween) {;
return(stop() ,_interval=setInterval(interpolator(_transform,t, +new Date,duration||400,tween||cosine) ,40) ) } ,transform=function(t) {;
return t?f(_transform=t) 
:_transform} ,interpolator=function(s,t,c,d,i) {;
return function() {var now= +new Date;
return(now>c+d&& (stop() ,now=c+d) ,transform(interpolate(s,t,i( (now-c) /d) ) ) ) } } ;
return{_transform:_transform,stop:stop,_interval:_interval,animate:animate,transform:transform,interpolator:interpolator} } ) .call(this) } ,default_viewport=function(canvas,t) {;
return viewport(t|| {x0:0,dx:1,y0:0,dy:1} ,default_renderer(canvas) ) } ,drag_events=function(canvas) {;
return(function() {var last_x=0,last_y=0,dragging=false,last_selected=null,$doc=jQuery(document) ,self=jQuery(canvas) ,record=function(x,y) {;
return(last_x=x,last_y=y) } ,start_dragging=function(e) {;
return(record(e.pageX,e.pageY) , ( ($doc) .mousemove(drag) ) .mouseup(stop_dragging) ) } ,stop_dragging=function(e) {;
return $doc.unbind( 'mousemove' ,drag) .unbind( 'mouseup' ,stop_dragging) } ,drag=function(e) {;
return(self.trigger( 'drag_delta' ,$.merge( {} ,e, {dx:e.pageX-last_x,dy:e.pageY-last_y} ) ) ,record(e.pageX,e.pageY) ) } ;
return( !self.data( 'splunge_drag_delta_installed' ) &&self.mousedown(start_dragging) .data( 'splunge_drag_delta_installed' ,true) ,self) } ) .call(this) } ,default_interaction=function(canvas,v) {;
return(function() {var x_scale=function(v) {;
return v.transform() .dx} ,pan_or_scale=function(e) {;
return e.shiftKey?scale(e) 
:pan(e) } ,y_scale=function(v) {;
return v.transform() .dy} ,scale=function(e) {;
return v.transform(plus(base(v.transform() ) ,times(d(v.transform() ) , {x:e.dx,y:e.dy} ) ) ) } ;
return drag_events(canvas) .on( 'drag_delta' ,pan_or_scale) } ) .call(this) } } ) .call: (function() {var vplus=e1.vplus,vtimes=e1.vtimes,vminus=e1.vminus,vscale=e1.vscale,vdot=e1.vdot,vnorm=e1.vnorm,vmin=e1.vmin,vmax=e1.vmax,vmacv=e1.vmacv,vmacs=e1.vmacs,vunit=e1.vunit,vproj=e1.vproj,vorth=e1.vorth;
return atan_scale=2/Math.PI,scaled_atan=function(x) {;
return Math.atan(x) *atan_scale} ,scaled_tan=function(x) {;
return Math.tan(clip(x/atan_scale) ) } ,clip=function(x) {;
return Math.min(Math.max(x, -1) ,1) } ,identity=function(x) {;
return x} ,componentwise=function(f1,f2) {;
return function(v) {;
return[f1(v[0] ) ,f2(v[1] ) ] } } ,x_tangent= {transform:componentwise(scaled_tan,identity) ,inverse:function() {;
return x_arctangent} } ,x_arctangent= {transform:componentwise(scaled_atan,identity) ,inverse:function() {;
return x_tangent} } ,y_tangent= {transform:componentwise(identity,scaled_tan) ,inverse:function() {;
return y_arctangent} } ,y_arctangent= {transform:componentwise(identity,scaled_atan) ,inverse:function() {;
return y_tangent} } ,inverse_polar= {transform:function(v) {var d=vnorm(v) ;
var t=Math.atan2(v[0] ,v[1] ) ;
return[d,t] } ,inverse:function() {;
return polar} } ,polar= {transform:function(v) {var d=v[0] ;
var t=v[1] ;
return[d*Math.cos(t) ,d*Math.sin(t) ] } ,inverse:function() {;
return inverse_polar} } ,rectangle=function(data,v,dv) {;
return(function(it) {return it.data=data,it} ) .call(this, (box(v,dv) ) ) } ,box=function(v,dv) {;
return new box_ctor(v,dv) } ,translate=function(v) {;
return new box_ctor(v, [1,1] ) } ,box_ctor= (function(it) {return $.merge(it.prototype, {area:function() {;
return this.dv[0] *this.dv[1] } ,plus:function(b) {;
return box(vplus(this.v,b.v) ,vplus(this.dv,b.dv) ) } ,interpolate:function(b,x) {;
return(this.scale(1-x) ) .plus(b.scale(x) ) } ,scale:function(x) {;
return box(vscale(this.v,x) ,vscale(this.dv,x) ) } ,transform:function(v) {;
return vplus(this.v,vtimes(v,this.dv) ) } ,inverse:function() {;
return box(vscale(this.v, -1) , [1/this.dv[0] ,1/this.dv[1] ] ) } ,bound:function() {;
return this} ,union:function(b) {;
return(function() {var c1=vmin(this.v,b.v) ,c2=vmax(vplus(this.v,this.dv) ,vplus(b.v,b.dv) ) ;
return box(c1,vminus(c2,c1) ) } ) .call(this) } ,transform_with:function(t) {;
return(this) .map_corners(function(_) {return t.transform(_) } ) } ,contains:function(v) {;
return v[0] >=this.v[0] &&v[1] >=this.v[1] &&v[0] <=this.v[0] +this.dv[0] &&v[1] <=this.v[1] +this.dv[1] } ,map_corners:function(f) {;
return(function() {var c1=f(this.v) ,c2=f(vplus(this.v,this.dv) ) ;
return box(c1,vminus(c2,c1) ) } ) .call(this) } } ) ,it} ) .call(this, ( (function(v,dv) {return this.v=v,this.dv=dv} ) ) ) ,stack=function(xs,v) {;
return array_stack(xs,0,v) } ,stack_object=function(o) {;
return $.merge(o, {transform_with:function(t) {;
return transformed_stack(this,t) } ,each:function(f) {var n=this.next() ;
return f(this.first() ) && (n&& (n) .each(f) ) } } ) } ,lazy_stack_object=function(o) {;
return( (o.bound=function() {var b=this.first() .bound() ;
return box(b.v, [b.dv[0] /0||0,b.dv[1] /0||0] ) } ) ,stack_object(o) ) } ,array_stack=function(xs,i,v) {;
return stack_object( {first:function() {;
return xs[i] } ,bound:function() {var b=this.first() .bound() ;
var n=this.next() ;
return n?b.union(n.bound() ) 
:b} ,next:function() {;
return i<xs.length&& (this.next_!==void 0?this.next_
:this.next_= (array_stack(xs,i+1,v) ) .transform_with(translate(vproj(this.first() .bound() .dv,v) ) ) ) } } ) } ,transformed_stack=function(s,t) {;
return stack_object( {first:function() {;
return s.first() .transform_with(t) } ,next:function() {var n=s.next() ;
return n&&transformed_stack(n,t) } ,bound:function() {;
return s.bound() .transform_with(t) } } ) } ,lazy_stack=function(x,f,v) {;
return lazy_stack_object( {first:function() {;
return x} ,next:function() {;
return f(x) } } ) } ,persistent_lazy_stack=function(x,f,v) {;
return lazy_stack_object( {first:function() {;
return x} ,next:function() {;
return this.next_!==void 0?this.next_
:this.next_=f(x) } } ) } ,rectangle_path=function(b,c) {;
return c.rect(b.v[0] ,b.v[1] ,b.v[0] +b.dv[0] ,b.v[1] +b.dv[1] ) } ,arc_path=function(b,c) {;
return( ( ( ( (c.save() ,c.rotate(b.v[1] ) ) ,c.arc(0,0,b.v[0] ,0,b.dv[1] ) ) ,c.arc(0,0,b.v[0] +b.dv[0] ,b.dv[1] ,0,true) ) ,c.lineTo(b.v[0] ,0) ) ,c.restore() ) } ,cosine=function(x) {;
return Math.cos(x*Math.PI) * -0.5+0.5} ,viewport=function(initial,f) {;
return(function() {var _transform=initial,stop=function() {;
return _interval&& (clearInterval(_interval) ,_interval=null) } ,_interval=null,animate=function(t,duration,tween) {;
return(stop() ,_interval=setInterval(interpolator(_transform,t, +new Date,duration||400,tween||cosine) ,40) ) } ,transform=function(t) {;
return t?f(_transform=t) 
:_transform} ,interpolator=function(s,t,c,d,i) {;
return function() {var now= +new Date;
return(now>c+d&& (stop() ,now=c+d) ,transform(interpolate(s,t,i( (now-c) /d) ) ) ) } } ;
return{_transform:_transform,stop:stop,_interval:_interval,animate:animate,transform:transform,interpolator:interpolator} } ) .call(this) } ,default_viewport=function(canvas,t) {;
return viewport(t|| {x0:0,dx:1,y0:0,dy:1} ,default_renderer(canvas) ) } ,drag_events=function(canvas) {;
return(function() {var last_x=0,last_y=0,dragging=false,last_selected=null,$doc=jQuery(document) ,self=jQuery(canvas) ,record=function(x,y) {;
return(last_x=x,last_y=y) } ,start_dragging=function(e) {;
return(record(e.pageX,e.pageY) , ( ($doc) .mousemove(drag) ) .mouseup(stop_dragging) ) } ,stop_dragging=function(e) {;
return $doc.unbind( 'mousemove' ,drag) .unbind( 'mouseup' ,stop_dragging) } ,drag=function(e) {;
return(self.trigger( 'drag_delta' ,$.merge( {} ,e, {dx:e.pageX-last_x,dy:e.pageY-last_y} ) ) ,record(e.pageX,e.pageY) ) } ;
return( !self.data( 'splunge_drag_delta_installed' ) &&self.mousedown(start_dragging) .data( 'splunge_drag_delta_installed' ,true) ,self) } ) .call(this) } ,default_interaction=function(canvas,v) {;
return(function() {var x_scale=function(v) {;
return v.transform() .dx} ,pan_or_scale=function(e) {;
return e.shiftKey?scale(e) 
:pan(e) } ,y_scale=function(v) {;
return v.transform() .dy} ,scale=function(e) {;
return v.transform(plus(base(v.transform() ) ,times(d(v.transform() ) , {x:e.dx,y:e.dy} ) ) ) } ;
return drag_events(canvas) .on( 'drag_delta' ,pan_or_scale) } ) .call(this) } } ) .call} } ) .call(this) } ) ;
result.caterwaul_expression_ref_table= {e1: ( "caterwaul.vector(2, 'v' )" ) } ;
return(result) } ) .call(this,caterwaul.vector(2, 'v' ) ) ) ;
